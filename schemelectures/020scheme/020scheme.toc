\beamer@endinputifotherversion {3.36pt}
\beamer@sectionintoc {1}{Procedures in Scheme}{2}{0}{1}
\beamer@sectionintoc {2}{Local Variables in Procedures: Closures}{3}{0}{2}
\beamer@sectionintoc {3}{A Procedure that Returns a Procedure}{4}{0}{3}
\beamer@sectionintoc {4}{A Procedure that Returns a Counter}{5}{0}{4}
\beamer@sectionintoc {5}{Procedures as Returned Values: Derivatives}{6}{0}{5}
\beamer@sectionintoc {6}{Procedures as Returned Values: Procedures as Data}{7}{0}{6}
\beamer@sectionintoc {7}{Procedures as parameters}{8}{0}{7}
\beamer@sectionintoc {8}{Better notation for summations}{9}{0}{8}
\beamer@sectionintoc {9}{Matches Scheme Code Better, Too}{12}{0}{9}
\beamer@sectionintoc {10}{We have the same problem with derivatives}{13}{0}{10}
\beamer@sectionintoc {11}{The chain rule}{14}{0}{11}
\beamer@sectionintoc {12}{Finding fixed points}{15}{0}{12}
\beamer@sectionintoc {13}{Fixed points in scheme:}{16}{0}{13}
\beamer@sectionintoc {14}{Remember Newton's Method?}{17}{0}{14}
\beamer@sectionintoc {15}{Newton's Method Using Functional Programming}{18}{0}{15}
\beamer@sectionintoc {16}{Procedures as Returned Values: Newton's Method Again}{19}{0}{16}
