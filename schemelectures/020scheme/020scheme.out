\BOOKMARK [2][]{Outline0.1}{Procedures in Scheme}{}% 1
\BOOKMARK [2][]{Outline0.2}{Local Variables in Procedures: Closures}{}% 2
\BOOKMARK [2][]{Outline0.3}{A Procedure that Returns a Procedure}{}% 3
\BOOKMARK [2][]{Outline0.4}{A Procedure that Returns a Counter}{}% 4
\BOOKMARK [2][]{Outline0.5}{Procedures as Returned Values: Derivatives}{}% 5
\BOOKMARK [2][]{Outline0.6}{Procedures as Returned Values: Procedures as Data}{}% 6
\BOOKMARK [2][]{Outline0.7}{Procedures as parameters}{}% 7
\BOOKMARK [2][]{Outline0.8}{Better notation for summations}{}% 8
\BOOKMARK [2][]{Outline0.9}{Matches Scheme Code Better, Too}{}% 9
\BOOKMARK [2][]{Outline0.10}{We have the same problem with derivatives}{}% 10
\BOOKMARK [2][]{Outline0.11}{The chain rule}{}% 11
\BOOKMARK [2][]{Outline0.12}{Finding fixed points}{}% 12
\BOOKMARK [2][]{Outline0.13}{Fixed points in scheme:}{}% 13
\BOOKMARK [2][]{Outline0.14}{Remember Newton's Method?}{}% 14
\BOOKMARK [2][]{Outline0.15}{Newton's Method Using Functional Programming}{}% 15
\BOOKMARK [2][]{Outline0.16}{Procedures as Returned Values: Newton's Method Again}{}% 16
